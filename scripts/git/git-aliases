#!/bin/bash

usage() {
	echo -e "usage: ./git-aliases [--system|--global|--local]"
}

if [ $# -lt 1 ]; then
	usage
	exit 1
fi

scope=$1

set -e

echo -e "Configuring aliases for config command..."
echo -e "New command: git aliases"
git config $scope alias.aliases "!git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/=\t/'"

echo -e "Configuring aliases for describe command..."
echo -e "New command: git last-tag"
git config $scope alias.last-tag "describe --tags --abbrev=0"

echo -e "Configuring aliases for log command..."
echo -e "New command: git history"
git config $scope alias.history "log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%ae>%Creset %Cgreen(%cr)%Creset %C(auto)%d%Creset - %s' --abbrev-commit --decorate --date=relative"
echo -e "New command: git changelog"
git config $scope alias.changelog "!f() { git last-tag | xargs -I tag git log tag..HEAD --pretty=format:\"  * [%h] %s\" --reverse --no-merges; }; f"
echo -e "New command: git authors"
git config $scope alias.authors '!git log --all --format="%aN <%aE>" | sort -u'

echo -e "Configuring aliases for diff command..."
echo -e "New command: git changes"
git config $scope alias.changes "diff --name-status -r"
echo -e "New command: git last-commit"
git config $scope alias.last-commit "diff --cached HEAD^"
echo -e "New command: git diffstat"
git config $scope alias.diffstat "diff --stat -r"

echo -e "Configuring aliases for unstage changes..."
echo -e "New command: git unstage"
git config $scope alias.unstage "reset HEAD --"

echo -e "Configuring aliases for push changes..."
echo -e "New command: git push-all"
git config $scope alias.push-all "!git push --all && git push --tags"