#!/bin/bash

# Configuracion
#EXAMPLE=("name; description; server; username; password; protocol;")
locations=(
	   )

#Nombre del script
me=`basename $0`

function usage
{
	echo "Usage: $(boldme $me) [$(boldme -h) | $(boldme -L) | $(boldme -d)] $(boldme -l) location"

	echo "  $(boldme '-l, --location')	location name"
	echo "  $(boldme '-L, --Locations')	print locations"
	echo "  $(boldme '-d, --debug')		debug output"
	echo "  $(boldme '-h, --help')		show this message"
	echo ''
}

NAME_TOK=0
DESC_TOK=1
HOST_TOK=2
USER_TOK=3
PASS_TOK=4
PROT_TOK=5
DOMAIN_TOK=6

function description
{
	name=$(gettok "$configuration" $NAME_TOK)
	description=$(gettok "$configuration" $DESC_TOK)
	host=$(gettok "$configuration" $HOST_TOK)
	user=$(gettok "$configuration" $USER_TOK)
	password=$(gettok "$configuration" $PASS_TOK)
	domain=$(gettok "$configuration" $DOMAIN_TOK)

	echo "Connecting to '$(boldme "$description")' at '$(boldme $host) @$(boldme $domain)' server, using '$(boldme $user)' credentials..."
	echo "You need to enter '$(boldme $password)' password"
	echo
}


function debug
{
	if $debug; then
		echo "$1"
	fi
}

function execute
{
	configuration=$(find_configuration $1)

	if [ "$configuration" == "" ]; then
		echo "$(boldme $1) no es un destino valido"
		show_locations
		exit 1
	fi

	name=$(gettok "$configuration" $NAME_TOK)
	description=$(gettok "$configuration" $DESC_TOK)
	host=$(gettok "$configuration" $HOST_TOK)
	user=$(gettok "$configuration" $USER_TOK)
	password=$(gettok "$configuration" $PASS_TOK)
	protocol=$(gettok "$configuration" $PROT_TOK)
	domain=$(gettok "$configuration" $DOMAIN_TOK)

	description "$configuration"

	case "$protocol" in
		ssh)
			debug "ssh -l $user $host"
			ssh -l $user $host
			exit
		;;
		telnet)
			debug "telnet -l $user $host"
			telnet -l $user $host
			exit
		;;
		rdesktop)
			#rdesktop -u jesus.lopez -p jesus -d CORPME -g 93% 10.0.145.22
			debug "rdesktop -u $user -p ***** -d $domain -g 93% $host"
			rdesktop -u $user -p $password -d $domain -g 93% $host
			exit
		;;
	esac
}

#Formateo de fuentes
bold=`tput bold`
normal=`tput sgr0`
function boldme
{
	echo "$bold$1$normal"
}

function gettok
{
	O=$IFS
	IFS=$(echo -en ";")

	index=0
	for element in $1
	do
		if [ "$index" == "$2" ]; then
			echo "$element" | sed 's/^[ ]//;s/[ ]$//'
		  exit
		fi

		index=$(( $index + 1 ))
	done
	IFS=$O
}

function find_configuration
{
	#debug "Searching configuration for $1 location"
	configuration=
	for ix in ${!locations[*]}
	do
		name=$(gettok "${locations[$ix]}" $NAME_TOK)
		if [ "$name" == "$1" ]; then
			#debug "Found configuration: ${locations[$ix]}"
			configuration=${locations[$ix]}
		fi
	done

	echo "$configuration"
}

function show_locations
{
	echo "Number of configured locations: $(boldme ${#locations[*]})"

	for ix in ${!locations[*]}
	do
		echo -e "\t"$(boldme $(gettok "${locations[$ix]}" $NAME_TOK))":\n\t\t"$(gettok "${locations[$ix]}" $DESC_TOK)
	done

	echo
}

#Valores por defecto
debug=false
location=

#Control de parametros
while [ "$1" != "" ]; do
    case $1 in
	-l | --location )
			shift
			location="$1"
       	;;
	-d | --debug)
			echo "Debug mode $(boldme on)";
			debug=true
		;;
	-L | --Locations)
			show_locations
			exit
		;;
    -h | --help )
			usage
			exit
      	;;
    * )
			usage
			exit 1
		;;
    esac

    shift
done

#Si no se selecciono location --> usage
if ! [ $location ]; then
	echo "No selecciono un destino valido $(boldme '(-l)')"
	usage
	exit 1
fi

#Ejecucion
execute $location
